language: rust
cache: cargo
matrix:
  # allow_failures:
  #   - rust: nightly
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-gnueabihf
        - CC_arm_unknown_linux_gnueabihf=/usr/bin/arm-linux-gnueabihf-gcc-4.8
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-musleabihf
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_MUSLEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8

    # Beta channel.
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu
    # Disabled to reduce total CI time
    # - os: linux
    #   rust: beta
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-musl
    # - os: osx
    #   rust: beta
    #   env: TARGET=x86_64-apple-darwin

    # Nightly channel.
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
    # Disabled to reduce total CI time
    # - os: linux
    #   rust: nightly
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-musl
    # - os: osx
    #   rust: nightly
    #   env: TARGET=x86_64-apple-darwin

    # Minimum Rust supported channel.
    - os: linux
      rust: 1.31.0
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: 1.31.0
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: 1.31.0
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: 1.31.0
      env: TARGET=i686-unknown-linux-musl
    - os: osx
      rust: 1.31.0
      env: TARGET=x86_64-apple-darwin

    # Code formatting check
    - os: linux
      rust: nightly
      # skip the global install step
      install:
        - cargo install --debug --force rustfmt-nightly
      script: cargo fmt -- --check

sudo: required

before_install:
  - ci/before_install.bash

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=fd

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - ci/script.bash

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "dFlV2ITPorZNOLLVCz1Yd8YYokpunBEiGtoLt0UaL4KQr7ZgRuKXa47vGLPpxKknrxMzQWsavnGcfQFCFJKMqzr5MtlpcBsQH6Jltl3qdBOV9et0bMQhZuhJEkt90ltclRdSQcIGXCbCGMpzfx7hfXwAvS09FU11QIiOJr8Tbme8gz9Gn9UTimQWaL2C9P8e5qfPbz1rAQ3skJuV7MAI/bZRmKBEvBcSj3ThZf9KR7zn+ri5S8ZmdAbJCbUVJPPZGhvyySAneIZARCEafEkgDjKU909JbuuiiggVkQo9yE1idrhd+iO8EZkMV7kDj1PIuoIRLZfeCS4uWCQ0bSJXWNgBkD9oaaAJd1690EbiId5volJqnh4N8BDxq6EmvkgpuD/L/2oT/BoySCJAuSWD7Xlog7nxHxP2SEx9+zOFXXO3Ce7fGHbFaNnWHG1qiRaXRSqNQXPzpxNRoObbPWyR0y5N61HDjuU6+vC5dxWon6K/7F5/o5BbaQfQ3qSADdLYFPVOjFbOu+WOUveSeusEwfPrL0hvjfXBKD4tZ4gsJMlddnB2+sopIM6yO69c601s7VTYpzqv0QK6ZU6NGeIrnxNYTMjEo/Y7X95jnnF9K9z71niokIDGHFgjShUQGxXnr4hB3nh13d6o6cM+pfMxiaE0n/j7tya30IJ0asBPDTE="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""

notifications:
  email:
    on_success: never
